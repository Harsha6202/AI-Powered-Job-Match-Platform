name: CI/CD

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18.x]
    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
      - name: Install backend dependencies
        run: |
          cd server
          npm install --legacy-peer-deps
      - name: Lint backend
        run: |
          cd server
          npm run lint
      - name: Set up MongoDB for tests
        uses: supercharge/mongodb-github-action@1.10.0
        with:
          mongodb-version: '6.0'
          mongodb-port: 27017
      - name: Run backend tests
        env:
          DB: mongodb://localhost:27017/test
        run: |
          cd server
          npm run test
      - name: Install frontend dependencies
        run: |
          cd client
          npm install --legacy-peer-deps
      - name: Lint frontend
        run: |
          cd client
          npm run lint
      - name: Run frontend tests
        run: |
          cd client
          npm run test

  build-and-push:
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push backend image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/job-match-backend:latest

      - name: Build and push frontend image
        uses: docker/build-push-action@v5
        with:
          context: ./client
          file: ./client/Dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/job-match-frontend:latest

  deploy:
    runs-on: ubuntu-latest
    needs: [test, build-and-push]
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    steps:
      - name: Deploy backend to Render
        run: curl -X POST ${{ secrets.RENDER_BACKEND_DEPLOY_HOOK }}

      - name: Deploy frontend to Render
        run: curl -X POST ${{ secrets.RENDER_FRONTEND_DEPLOY_HOOK }}

